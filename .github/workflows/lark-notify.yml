name: Deploy and Notify Lark

on:
  push:
    branches: [ main, master ]  # ‡∏´‡∏£‡∏∑‡∏≠ branch ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  pull_request:
    branches: [ main, master ]

env:
  LARK_WEBHOOK: "https://open.larksuite.com/open-apis/bot/v2/hook/88fccfea-8fad-47d9-99a9-44d214785fff"
  APP_ID: "cli_a8b2c70af7389029"
  APP_SECRET: "QUbHQALAU0xrxWid9QU8Hb50wpY1wtwv"

jobs:
  deploy-and-notify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get commit info
      id: commit_info
      run: |
        echo "commit_message=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
        echo "author_name=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
        echo "repo_name=${{ github.repository }}" >> $GITHUB_OUTPUT
        echo "repo_url=${{ github.repositoryUrl }}" >> $GITHUB_OUTPUT
    
    - name: Get Lark tenant access token
      id: get_token
      run: |
        TOKEN=$(curl -s -X POST "https://open.larksuite.com/open-apis/auth/v3/tenant_access_token/internal" \
          -H "Content-Type: application/json" \
          -d '{
            "app_id": "'$APP_ID'",
            "app_secret": "'$APP_SECRET'"
          }' | jq -r '.tenant_access_token')
        echo "token=$TOKEN" >> $GITHUB_OUTPUT
    
    - name: Download GitHub logo
      run: |
        curl -o github_logo.png https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
    
    - name: Upload image to Lark
      id: upload_image
      run: |
        IMAGE_KEY=$(curl -s -X POST "https://open.larksuite.com/open-apis/im/v1/images" \
          -H "Authorization: Bearer ${{ steps.get_token.outputs.token }}" \
          -F "image_type=message" \
          -F "image=@github_logo.png" | jq -r '.data.image_key')
        echo "image_key=$IMAGE_KEY" >> $GITHUB_OUTPUT
    
    - name: Send notification to Lark
      run: |
        curl -X POST "$LARK_WEBHOOK" \
          -H "Content-Type: application/json" \
          -d '{
            "msg_type": "interactive",
            "card": {
              "header": {
                "title": {
                  "tag": "plain_text",
                  "content": "Backend Deployment"
                },
                "template": "blue"
              },
              "elements": [
                {
                  "tag": "img",
                  "img_key": "${{ steps.upload_image.outputs.image_key }}",
                  "mode": "fit_horizontal",
                  "preview": true
                },
                {
                  "tag": "div",
                  "text": {
                    "tag": "lark_md",
                    "content": "**ü§ñ Deployer**\n${{ steps.commit_info.outputs.author_name }}"
                  }
                },
                {
                  "tag": "div",
                  "text": {
                    "tag": "lark_md",
                    "content": "**Service Name**\n${{ github.event.repository.name }}"
                  }
                },
                {
                  "tag": "div",
                  "text": {
                    "tag": "lark_md",
                    "content": "**Commit Message**\n‚Ä¢ ${{ steps.commit_info.outputs.commit_message }}"
                  }
                },
                {
                  "tag": "action",
                  "actions": [
                    {
                      "tag": "button",
                      "text": {
                        "content": "‡∏î‡∏π Repository üîç",
                        "tag": "plain_text"
                      },
                      "url": "${{ github.event.repository.html_url }}",
                      "type": "primary"
                    }
                  ]
                }
              ]
            }
          }'
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏° step ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö deployment ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    - name: Deploy application
      run: |
        echo "üöÄ Deploying application..."
        # ‡πÉ‡∏™‡πà‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á deployment ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÄ‡∏ä‡πà‡∏ô
        # docker build -t myapp .
        # docker push myapp
        # kubectl apply -f deployment.yaml
        echo "‚úÖ Deployment completed!"
